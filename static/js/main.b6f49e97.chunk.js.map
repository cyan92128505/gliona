{"version":3,"sources":["components/hello/hello.module.scss","models/buyer.ts","models/rating.ts","models/rating_type.ts","components/Counter/Counter.tsx","components/hello/hello.tsx","providers/ui_store.tsx","pages/dashboard/dashboard.tsx","reportWebVitals.ts","resources/buyers/buyer_list.tsx","resources/buyers/index.tsx","resources/ratings/rating_list.tsx","resources/ratings/index.tsx","theme/custom_theme.ts","index.tsx","models/main.ts"],"names":["module","exports","Buyer","id","name","ratingTable","description","this","Rating","ratingType","score","RatingType","baseNumber","Counter","initialClick","useState","click","setClick","Container","maxWidth","Button","variant","color","onClick","Hello","className","styles","hello","data-testid","UIStore","Store","isDarkMode","toggleMode","s","Dashboard","style","background","update","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","BuyerIcon","PetsIcon","useStyles","makeStyles","theme","title","overflow","textOverflow","whiteSpace","hiddenOnSmallScreens","breakpoints","down","display","publishedAt","fontStyle","BuyerResource","list","props","classes","List","Datagrid","optimized","TextField","source","cellClassName","icon","RatingIcon","GradeIcon","RatingResource","myTheme","createMuiTheme","palette","primary","teal","secondary","brown","error","red","contrastThreshold","tonalOffset","typography","fontFamily","join","overrides","MuiButton","root","mainObject","buyerSchemas","buyers","ratings","ratingTypes","push","dataProvider","localStorageDataProvider","defaultData","localStorageKey","loggingEnabled","localStorageUpdateDelay","ReactDOM","render","Admin","Resource","DashboardIcon","BuyerResourse","RatingResourse","document","getElementById"],"mappings":"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","file":"static/js/main.b6f49e97.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"hello\":\"hello_hello__2rNhp\"};","import { Rating } from './rating';\n\nexport class Buyer {\n  id: number;\n  name: string = '';\n  ratingTable: Rating[] = [];\n  description: string = '';\n\n  constructor(id: number, name: string, ratingTable: Rating[], description: string) {\n    this.id = id;\n    this.name = name;\n    this.ratingTable = ratingTable;\n    this.description = description;\n  }\n}\n","import { RatingType } from './rating_type';\n\nexport class Rating {\n  id: number;\n  name: string = ``;\n  ratingType: RatingType;\n  score: number = 0;\n\n  constructor(id: number, name: string, ratingType: RatingType, score: number) {\n    this.id = id;\n    this.name = name;\n    this.ratingType = ratingType;\n    this.score = score;\n  }\n}\n","export class RatingType {\n  id: number;\n  name: string = ``;\n  baseNumber: number = 1;\n\n  constructor(id: number, name: string, baseNumber: number) {\n    this.id = id;\n    this.name = name;\n    this.baseNumber = baseNumber;\n  }\n}\n","import { Button, Container } from '@material-ui/core';\nimport React, { useState } from 'react';\n\ntype Props = {\n  initialClick?: number;\n};\n\nconst Counter: React.FC<Props> = ({ initialClick = 0 }) => {\n  const [click, setClick] = useState(initialClick);\n\n  return (\n    <Container maxWidth=\"sm\">\n      Click: {click}\n      <br />\n      <Button variant=\"contained\" color=\"primary\" onClick={() => setClick(click + 1)}>\n        Click Me!\n      </Button>\n    </Container>\n  );\n};\n\nexport default Counter;\n","import React from 'react';\nimport styles from './hello.module.scss';\n\nexport const Hello: React.FC<{ name?: string }> = ({ name = `world` }) => {\n  return (\n    <div className={styles.hello} data-testid=\"hello\">\n      hello {name}\n    </div>\n  );\n};\n","import { Store } from 'pullstate';\n\nexport interface IUIStore {\n  isDarkMode: boolean;\n}\n\nexport const UIStore = new Store<IUIStore>({\n  isDarkMode: true,\n});\n","import { Button } from '@material-ui/core';\nimport React from 'react';\nimport Counter from '../../components/Counter/Counter';\nimport { Hello } from '../../components/hello/hello';\nimport { IUIStore, UIStore } from '../../providers/ui_store';\nimport './dashboard.css';\n\nfunction toggleMode(s: IUIStore) {\n  s.isDarkMode = !s.isDarkMode;\n}\n\nfunction Dashboard() {\n  const isDarkMode = UIStore.useState((s) => s.isDarkMode);\n\n  return (\n    <div\n      className=\"dashboard\"\n      style={{\n        background: isDarkMode ? '#282c34' : 'white',\n        color: isDarkMode ? 'white' : '#282c34',\n      }}\n    >\n      <header className=\"dahsboard-header\">\n        <Hello />\n        <Counter />\n        <br />\n        <Button variant=\"contained\" color=\"primary\" onClick={() => UIStore.update(toggleMode)}>\n          Toggle Dark Mode\n        </Button>{' '}\n      </header>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { makeStyles } from '@material-ui/core/styles';\nimport PetsIcon from '@material-ui/icons/Pets';\nimport React from 'react';\nimport { Datagrid, List, ListProps, TextField } from 'react-admin'; // eslint-disable-line import/no-unresolved\n\nexport const BuyerIcon = PetsIcon;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    maxWidth: '20em',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n  },\n  hiddenOnSmallScreens: {\n    [theme.breakpoints.down('md')]: {\n      display: 'none',\n    },\n  },\n  publishedAt: { fontStyle: 'italic' },\n}));\n\nconst BuyerList: React.FC<ListProps> = (props) => {\n  const classes = useStyles();\n\n  return (\n    <List {...props}>\n      <Datagrid optimized>\n        <TextField source=\"id\" />\n        <TextField source=\"name\" cellClassName={classes.title} />\n      </Datagrid>\n    </List>\n  );\n};\n\nexport default BuyerList;\n","import BuyerList, { BuyerIcon } from './buyer_list';\n\nconst BuyerResource = {\n  list: BuyerList,\n  icon: BuyerIcon,\n};\n\nexport default BuyerResource;\n","import { makeStyles } from '@material-ui/core/styles';\nimport GradeIcon from '@material-ui/icons/Grade';\nimport React from 'react';\nimport { Datagrid, List, ListProps, TextField } from 'react-admin'; // eslint-disable-line import/no-unresolved\n\nexport const RatingIcon = GradeIcon;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    maxWidth: '20em',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n  },\n  hiddenOnSmallScreens: {\n    [theme.breakpoints.down('md')]: {\n      display: 'none',\n    },\n  },\n  publishedAt: { fontStyle: 'italic' },\n}));\n\nconst RatingList: React.FC<ListProps> = (props) => {\n  const classes = useStyles();\n\n  return (\n    <List {...props}>\n      <Datagrid optimized>\n        <TextField source=\"id\" />\n        <TextField source=\"name\" cellClassName={classes.title} />\n      </Datagrid>\n    </List>\n  );\n};\n\nexport default RatingList;\n","import RatingList, { RatingIcon } from './rating_list';\n\nconst RatingResource = {\n  list: RatingList,\n  icon: RatingIcon,\n};\n\nexport default RatingResource;\n","import { brown, red, teal } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nexport const myTheme = createMuiTheme({\n  palette: {\n    primary: teal,\n    secondary: brown,\n    error: red,\n    contrastThreshold: 3,\n    tonalOffset: 0.2,\n  },\n  typography: {\n    // Use the system font instead of the default Roboto font.\n    fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Arial', 'sans-serif'].join(','),\n  },\n  overrides: {\n    MuiButton: {\n      // override the styles of all instances of this component\n      root: {\n        // Name of the rule\n        color: 'white', // Some CSS\n      },\n    },\n  },\n});\n","import DashboardIcon from '@material-ui/icons/Dashboard';\nimport localStorageDataProvider from 'ra-data-local-storage';\nimport React from 'react';\nimport { Admin, Resource } from 'react-admin';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Buyer } from './models/buyer';\nimport { MainObject } from './models/main';\nimport { Rating } from './models/rating';\nimport { RatingType } from './models/rating_type';\nimport Dashboard from './pages/dashboard/dashboard';\nimport reportWebVitals from './reportWebVitals';\nimport BuyerResourse from './resources/buyers';\nimport RatingResourse from './resources/ratings';\nimport { myTheme } from './theme/custom_theme';\n\nconst mainObject = new MainObject();\nmainObject.buyers.push(new Buyer(0, '', [], ''));\nmainObject.buyers.push(new Buyer(1, '', [], ''));\nmainObject.buyers.push(new Buyer(2, '', [], ''));\nmainObject.ratings.push(new Rating(0, '', new RatingType(0, '', 1), 1));\nmainObject.ratings.push(new Rating(1, '', new RatingType(0, '', 1), 1));\nmainObject.ratings.push(new Rating(2, '', new RatingType(0, '', 1), 1));\n\nconst dataProvider = localStorageDataProvider({\n  defaultData: mainObject,\n  localStorageKey: '',\n  loggingEnabled: true,\n  localStorageUpdateDelay: 100,\n});\n\nReactDOM.render(\n  <Admin theme={myTheme} dataProvider={dataProvider}>\n    <Resource name=\"dashboard\" list={Dashboard} icon={DashboardIcon} />\n    <Resource name=\"buyers\" list={BuyerResourse.list} icon={BuyerResourse.icon} />\n    <Resource name=\"ratings\" list={RatingResourse.list} icon={RatingResourse.icon} />\n  </Admin>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { Buyer } from './buyer';\nimport { BuyerSchema } from './buyer_schema';\nimport { Rating } from './rating';\nimport { RatingType } from './rating_type';\n\nexport class MainObject {\n  buyerSchemas: BuyerSchema[] = [];\n  buyers: Buyer[] = [];\n  ratings: Rating[] = [];\n  ratingTypes: RatingType[] = [];\n}\n"],"sourceRoot":""}