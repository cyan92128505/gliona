{"version":3,"sources":["components/Counter/Counter.module.scss","components/hello/hello.module.scss","components/Counter/Counter.tsx","components/hello/hello.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Counter","initialClick","useState","click","setClick","className","styles","hello","onClick","Hello","name","data-testid","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,MAAQ,uB,+ICiBXC,EAXkB,SAAC,GAA0B,IAAD,IAAvBC,oBAAuB,MAAR,EAAQ,IAC/BC,mBAASD,GADsB,mBAClDE,EADkD,KAC3CC,EAD2C,KAGzD,OACE,sBAAKC,UAAWC,IAAOC,MAAvB,UACE,wCAAWJ,KACX,wBAAQK,QAAS,kBAAMJ,EAASD,EAAQ,IAAxC,2B,gBCVOM,EAAqC,SAAC,GAAwB,IAAD,IAArBC,YAAqB,gBACxE,OACE,sBAAKL,UAAWC,IAAOC,MAAOI,cAAY,QAA1C,mBACSD,MCUEE,MAXf,WACE,OACE,qBAAKP,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,UCIOQ,G,MAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCHdQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDZ,M","file":"static/js/main.5531e69c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Counter\":\"Counter_Counter__2Vk3y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hello\":\"hello_hello__2rNhp\"};","import React, { useState } from 'react';\nimport styles from './Counter.module.scss';\n\ntype Props = {\n  initialClick?: number;\n};\n\nconst Counter: React.FC<Props> = ({ initialClick = 0 }) => {\n  const [click, setClick] = useState(initialClick);\n\n  return (\n    <div className={styles.hello}>\n      <p>Click: {click}</p>\n      <button onClick={() => setClick(click + 1)}>Click Me!</button>\n    </div>\n  );\n};\n\nexport default Counter;\n","import React from 'react';\nimport styles from './hello.module.scss';\n\nexport const Hello: React.FC<{ name?: string }> = ({ name = `world` }) => {\n  return (\n    <div className={styles.hello} data-testid=\"hello\">\n      hello {name}\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport Counter from './components/Counter/Counter';\nimport { Hello } from './components/hello/hello';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Hello />\n        <Counter />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}